// Generated by view binder compiler. Do not edit!
package com.example.Login_DB.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.Login_DB.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TimerPomodoroBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addNotesButton;

  @NonNull
  public final Button breakButton;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final LinearLayout notesContainer;

  @NonNull
  public final LinearLayout notesLayout;

  @NonNull
  public final ScrollView notesScrollView;

  @NonNull
  public final Button pauseButton;

  @NonNull
  public final Button pomodoroButton;

  @NonNull
  public final Button resetButton;

  @NonNull
  public final Button startButton;

  @NonNull
  public final TextView statusTextView;

  @NonNull
  public final TextView timerTextView;

  private TimerPomodoroBinding(@NonNull LinearLayout rootView, @NonNull Button addNotesButton,
      @NonNull Button breakButton, @NonNull ImageView imageView2,
      @NonNull LinearLayout notesContainer, @NonNull LinearLayout notesLayout,
      @NonNull ScrollView notesScrollView, @NonNull Button pauseButton,
      @NonNull Button pomodoroButton, @NonNull Button resetButton, @NonNull Button startButton,
      @NonNull TextView statusTextView, @NonNull TextView timerTextView) {
    this.rootView = rootView;
    this.addNotesButton = addNotesButton;
    this.breakButton = breakButton;
    this.imageView2 = imageView2;
    this.notesContainer = notesContainer;
    this.notesLayout = notesLayout;
    this.notesScrollView = notesScrollView;
    this.pauseButton = pauseButton;
    this.pomodoroButton = pomodoroButton;
    this.resetButton = resetButton;
    this.startButton = startButton;
    this.statusTextView = statusTextView;
    this.timerTextView = timerTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TimerPomodoroBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TimerPomodoroBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.timer_pomodoro, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TimerPomodoroBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addNotesButton;
      Button addNotesButton = ViewBindings.findChildViewById(rootView, id);
      if (addNotesButton == null) {
        break missingId;
      }

      id = R.id.breakButton;
      Button breakButton = ViewBindings.findChildViewById(rootView, id);
      if (breakButton == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.notesContainer;
      LinearLayout notesContainer = ViewBindings.findChildViewById(rootView, id);
      if (notesContainer == null) {
        break missingId;
      }

      id = R.id.notesLayout;
      LinearLayout notesLayout = ViewBindings.findChildViewById(rootView, id);
      if (notesLayout == null) {
        break missingId;
      }

      id = R.id.notesScrollView;
      ScrollView notesScrollView = ViewBindings.findChildViewById(rootView, id);
      if (notesScrollView == null) {
        break missingId;
      }

      id = R.id.pauseButton;
      Button pauseButton = ViewBindings.findChildViewById(rootView, id);
      if (pauseButton == null) {
        break missingId;
      }

      id = R.id.pomodoroButton;
      Button pomodoroButton = ViewBindings.findChildViewById(rootView, id);
      if (pomodoroButton == null) {
        break missingId;
      }

      id = R.id.resetButton;
      Button resetButton = ViewBindings.findChildViewById(rootView, id);
      if (resetButton == null) {
        break missingId;
      }

      id = R.id.startButton;
      Button startButton = ViewBindings.findChildViewById(rootView, id);
      if (startButton == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      id = R.id.timerTextView;
      TextView timerTextView = ViewBindings.findChildViewById(rootView, id);
      if (timerTextView == null) {
        break missingId;
      }

      return new TimerPomodoroBinding((LinearLayout) rootView, addNotesButton, breakButton,
          imageView2, notesContainer, notesLayout, notesScrollView, pauseButton, pomodoroButton,
          resetButton, startButton, statusTextView, timerTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
