// Generated by view binder compiler. Do not edit!
package com.example.Login_DB.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.Login_DB.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginFormBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnlogin;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final EditText ed3;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final EditText logtxt;

  @NonNull
  public final TextView regisLink;

  @NonNull
  public final TextView txt;

  private ActivityLoginFormBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnlogin,
      @NonNull ConstraintLayout constraintLayout, @NonNull EditText ed3,
      @NonNull ImageView imageView, @NonNull EditText logtxt, @NonNull TextView regisLink,
      @NonNull TextView txt) {
    this.rootView = rootView;
    this.btnlogin = btnlogin;
    this.constraintLayout = constraintLayout;
    this.ed3 = ed3;
    this.imageView = imageView;
    this.logtxt = logtxt;
    this.regisLink = regisLink;
    this.txt = txt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginFormBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginFormBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login_form, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginFormBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnlogin;
      Button btnlogin = ViewBindings.findChildViewById(rootView, id);
      if (btnlogin == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.ed3;
      EditText ed3 = ViewBindings.findChildViewById(rootView, id);
      if (ed3 == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.logtxt;
      EditText logtxt = ViewBindings.findChildViewById(rootView, id);
      if (logtxt == null) {
        break missingId;
      }

      id = R.id.regisLink;
      TextView regisLink = ViewBindings.findChildViewById(rootView, id);
      if (regisLink == null) {
        break missingId;
      }

      id = R.id.txt;
      TextView txt = ViewBindings.findChildViewById(rootView, id);
      if (txt == null) {
        break missingId;
      }

      return new ActivityLoginFormBinding((ConstraintLayout) rootView, btnlogin, constraintLayout,
          ed3, imageView, logtxt, regisLink, txt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
